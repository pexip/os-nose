Description: Disable some unstable tests in multiprocessing module
Author: Dmitry Shachnev <mitya57@gmail.com>
Forwarded: not-needed
Last-Update: 2014-05-04

--- a/functional_tests/test_multiprocessing/test_keyboardinterrupt.py
+++ b/functional_tests/test_multiprocessing/test_keyboardinterrupt.py
@@ -59,6 +59,7 @@ def get_log_content(logfile):
     return content
 
 def test_keyboardinterrupt():
+    raise nose.SkipTest('Disabled in Debian')
     process, logfile, _ = keyboardinterrupt('keyboardinterrupt.py')
     stdout, stderr = [s.decode('utf-8') for s in process.communicate(None)]
     log = get_log_content(logfile)
@@ -79,6 +80,7 @@ def test_keyboardinterrupt():
 
 
 def test_keyboardinterrupt_twice():
+    raise nose.SkipTest('Disabled in Debian')
     process, logfile, killfile = keyboardinterrupt('keyboardinterrupt_twice.py')
     waitForKillFile(killfile)
     os.killpg(process.pid, signal.SIGINT)
--- a/functional_tests/test_multiprocessing/test_process_timeout.py
+++ b/functional_tests/test_multiprocessing/test_process_timeout.py
@@ -1,4 +1,5 @@
 import os
+import nose
 
 from test_multiprocessing import MPTestBase
 
@@ -7,6 +8,7 @@ class TestMPTimeout(MPTestBase):
     suitepath = os.path.join(os.path.dirname(__file__), 'support', 'timeout.py')
 
     def runTest(self):
+        raise nose.SkipTest('Disabled in Debian')
         assert "TimedOutException: 'timeout.test_timeout'" in self.output
         assert "Ran 2 tests in" in self.output
         assert "FAILED (errors=1)" in self.output
